/**
 * This code is auto-generated; unless you know what you're doing, do not modify!
 **/

#ifndef <%- cppClassName.toUpperCase() %>_H
#define <%- cppClassName.toUpperCase() %>_H

#include <v8.h>
#include <node.h>
#include <string>

#include "git2.h"

using namespace node;
using namespace v8;

class <%- cppClassName %> : public ObjectWrap {
  public:

    static Persistent<Function> constructor_template;
    static void Initialize (Handle<v8::Object> target);

<% if (typeof cType != 'undefined') { -%>
    <%- cType %> *GetValue();

    static Handle<Value> New(void *raw);
<% } -%>

  private:
<% if (typeof cType != 'undefined') { -%>
    <%- cppClassName %>(<%- cType %> *raw);
    ~<%- cppClassName %>();
<% } -%>

    static NAN_METHOD(New);

<% if (typeof fields != 'undefined') { -%>
<%
  for (var i in fields) {
    var fieldInfo = fields[i];
    if (fieldInfo.ignore) continue;
-%>
    static NAN_METHOD(<%- fieldInfo.cppFunctionName %>);
<% } -%>
<% } -%>

<% if (typeof functions != 'undefined') { -%>
<%
  for (var i in functions) {
    var functionInfo = functions[i];
    if (functionInfo.ignore) continue;
-%>
    static NAN_METHOD(<%- functionInfo.cppFunctionName %>);

<% } -%>
<% } -%>
<% if (typeof cType != 'undefined') { -%>
    <%- cType %> *raw;
<% } -%>
};

#endif
